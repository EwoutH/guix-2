This fixes build on 32 bits platforms. This patch is taken from upstream.

commit 497432fd2131967f349e69dc5d259072151cc4b4
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Sep 27 15:04:09 2017 +0200

    checks: Use proper format modifier for size_t
    
    The size of size_t can vary between architectures, so using %ld isn't
    going to work on 32-bit builds. Use the %zu modifier to make sure it is
    always correct.
    
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Acked-by: Rob Herring <robh@kernel.org>
    Signed-off-by: David Gibson <david@gibson.dropbear.id.au>

diff --git a/checks.c b/checks.c
index 902f2e3..08a3a29 100644
--- a/checks.c
+++ b/checks.c
@@ -972,7 +972,7 @@ static void check_property_phandle_args(struct check *c,
 	int cell, cellsize = 0;
 
 	if (prop->val.len % sizeof(cell_t)) {
-		FAIL(c, dti, "property '%s' size (%d) is invalid, expected multiple of %ld in node %s",
+		FAIL(c, dti, "property '%s' size (%d) is invalid, expected multiple of %zu in node %s",
 		     prop->name, prop->val.len, sizeof(cell_t), node->fullpath);
 		return;
 	}
@@ -1163,7 +1163,7 @@ static void check_interrupts_property(struct check *c,
 		return;
 
 	if (irq_prop->val.len % sizeof(cell_t))
-		FAIL(c, dti, "property '%s' size (%d) is invalid, expected multiple of %ld in node %s",
+		FAIL(c, dti, "property '%s' size (%d) is invalid, expected multiple of %zu in node %s",
 		     irq_prop->name, irq_prop->val.len, sizeof(cell_t),
 		     node->fullpath);
 
